public class Test {
  public static void main(String[] args) throws EmployeException {
    Entreprise e1 = new Entreprise("IBM");
    e1.ajouter(new Employe("Dupond", 5000));
    e1.ajouter(new Employe("Poiret", 6000));
    e1.ajouter(new Employe("Burot", 5700));
    e1.ajouter(new Employe("Pernaut", 4300));
    System.out.println(e1);
    
    // Remplit une liste avec les employés
    List<Employe> l = new ArrayList<>();
    for (Employe e : e1) {
      l.add(e);
    }

    // Tri par salaires croissants
    CompareSalaire comparateur = new CompareSalaire();
    Collections.sort(l, comparateur);
    System.out.println("Employés de " + e1.getNom() 
		       + " par ordre croissant des salaires");
    for (Employe employe : l) {
      System.out.println(employe.getNom() + " gagne "
			 + employe.getSalaire());
    }
}
CompareSalaire :

import java.util.Comparator;

/**
 * Comparateur d'employés. Utilise le salaire pour
 * comparer 2 employés.
 */
public class CompareSalaire implements Comparator<Employe> {

  /**
   * Compare 2 employés suivant leur salaire.
   * @return un nombre positif si le salaire de e1 est supérieur au
   * salaire de e2, 0 si les 2 salaires sont les mêmes, et négatif sinon.
   */
  public int compare(Employe e1, Employe e2) {
    return Double.compare(e1.getSalaire(), e2.getSalaire());
  }
}
Entreprise :
import java.util.*;

/**
 * Une entreprise
 */
public class Entreprise implements Iterable<Employe> {
  private String nom;
  private ArrayList<Employe> employes;

  public Entreprise(String nom) {
    this.nom = nom;
    employes = new ArrayList<Employe>();
  }
  
  public String getNom() {
    return nom;
  }

  public void ajouter(Employe emp) throws EmployeException {
    if (! employes.add(emp)) {
      throw new EmployeException("Employé déjà dans cette entreprise", emp);
    }
  }

  @Override
  public Iterator<Employe> iterator() {
    return employes.iterator();
  }  

  @Override
  public String toString() {
    StringBuffer sb = new StringBuffer(nom);
    for (Employe employe : employes) {
      sb.append("\n   " + employe.getNom());
    }
    return sb.toString();
  }
}
Employe :

/**
 * Un employé.
 */
public class Employe {
  private String nom;
  private double salaire;

  protected Employe(String nom, double salaire) {
    this.nom = nom;
    this.salaire = salaire;
  }

  public String getNom() {
    return nom;
  }

  public double getSalaire() {
    return salaire;
  }
}
EmployeException :

public class EmployeException extends Exception {
  public EmployeException(String message) {
    super(message);
  }
} 